#!/usr/bin/env bash

#setup
test -d /root/cptechs || mkdir /root/cptechs;
ticket="${PS1//[^0-9]/}";
if [ ! -z "$ticket" ]; then export ticket="$ticket"; mkdir /root/cptechs/"$ticket"; else >&2 printf "ticket not found in prompt\n"; fi

#colors
ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"

#aliases

#functions
function cpbak () {
	for i in "$@"; do
		if [ -d "$i" ]; then
			epoch="$(date +%s)"
			tar -zcf /root/cptechs/"$ticket"/"${epoch}${i//\//_}".tar.gz "$i";
			{ printf "%s -> " "$i"; printf "/root/cptechs/%s/" "$ticket"; printf "%s" "$epoch"; printf "%s.tar.gz\n" "${i//\//_}"; } >&2;
		elif [ -f "$i" ]; then
			cp -av "$i" /root/cptechs/"$ticket"/"$(date +%s)${i//\//_}";
		fi;
	done;
}

function cplistips () {
	test -f /usr/local/cpanel/bin/whmapi1 || { >&2 printf "whmapi1 not found\n"; return; };
	/usr/local/cpanel/bin/whmapi1 listips|grep -oP "(?<=public_ip: )[^ ]+";
}

function cphostname () {
	test -f /usr/local/cpanel/bin/whmapi1 || { >&2 printf "whmapi1 not found\n"; return; };
	/usr/local/cpanel/bin/whmapi1 gethostname|grep -oP "(?<=hostname: )[^ ]+";
}

function cpns () {
	test -f /usr/local/cpanel/bin/whmapi1 || { >&2 printf "whmapi1 not found\n"; return; };
	/usr/local/cpanel/bin/whmapi1 get_nameserver_config|grep -oP "(?<= - )[^ ]+";
}

function exicwd () {
	if [ "$1" == "-a" ]; then
		zgrep -hoP "(?<=cwd=)/[^ ]+" /var/log/exim_mainlog*|sort|uniq -c|sort -nr;
	else
		grep -hoP "(?<=cwd=)/[^ ]+" /var/log/exim_mainlog|sort|uniq -c|sort -nr;
	fi
}

function exilogins () {
	if [ "$1" == "-a" ]; then
		zgrep -ho "A=\(.*\)\(@\|+\)\(.*\) S=" /var/log/exim_mainlog*|sed 's/ S\=//g'|sed 's/A\=\(.*\)\://g'|sed '/\(.*\)P=\(.*\)/d'|sort|uniq -c|sort -nr;
	else
		grep -ho "A=\(.*\)\(@\|+\)\(.*\) S=" /var/log/exim_mainlog|sed 's/ S\=//g'|sed 's/A\=\(.*\)\://g'|sed '/\(.*\)P=\(.*\)/d'|sort|uniq -c|sort -nr;
	fi;
}

function vhostphp () {
	test -f /usr/local/cpanel/bin/whmapi1||{ >&2 printf "whmapi1 not found\n"; return; };
	test -f /etc/cpanel/ea4/is_ea4||{ >&2 printf "Not EA4\n"; return; };
	if [ "$#" -eq 0 ]; then
		/usr/local/cpanel/bin/whmapi1 php_get_vhost_versions|awk '/ +vhost:/{print $2,ver} {ver=$2}';
	else
		vhosts="$@";
		/usr/local/cpanel/bin/whmapi1 php_get_vhost_versions|awk '/ +vhost:/{print $2,ver} {ver=$2}'|grep -E "${vhosts// /|}";
	fi;
}

function cpdns () {
	for i in "$@"; do
		>&2 printf "%s:\n" "$i";
		/usr/local/cpanel/3rdparty/perl/*/bin/perl -mCpanel::DnsRoots -e 'use Data::Dumper; print Dumper(Cpanel::DnsRoots->new()->get_ipv4_addresses_for_domain("@ARGV"));' "$i"|grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b";
	done;
}

function cpfpm () {
	for i in /opt/cpanel/ea-php*; do
		find "$i" -path \*fpm.d\*.conf|\
		while read j; do
			d="$(basename $j)";
			printf "%s: " "${i##*/}"; printf "%s\n" "${d%.*}";
		done;
	done;
}

function ipinfo () {
        for i in "$@"; do
                curl -s ipinfo.io/"$i"|sed -E '/^[{}]/d; s/([,"]*|^[ ]+)//g';
        done;
}

function hosted () {
        for i in "$@"; do
                ips=($(dig A "$i" +short @8.8.8.8));
                for ip in "${ips[@]}"; do
                        org="$(ipinfo $ip|awk '/^org: /{print$3}')";
                        [[ "$org" =~ Cloudflare ]] && {
			>&2 printf "%b" "$COL_YELLOW";
			>&2 printf "%s is behind Cloudflare\n" "$i";
			>&2 printf "%b" "$COL_RESET";
			return 2; };
                        cplistips|grep -q "$ip";
			if [ "$?" -eq 0 ]; then
				>&2 printf "%b" "$COL_GREEN";
				>&2 printf "%s points to this server\n" "$i";
				>&2 printf "%b" "$COL_RESET";
				return 0;
			else
				>&2 printf "%b" "$COL_RED";
				>&2 printf "%s doesn't point to this server\n" "$i";
				>&2 printf "%b" "$COL_RESET";
				return 1;
			fi;
                done;
        done;
}
